---
import { getCollection } from "astro:content";
import Posts from "../../../layouts/Posts.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import BaseHead from "../../../components/BaseHead.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../../consts";
import { sortByDate } from "../../../utils/posts";
import Pagination from "../../../layouts/Pagination.astro";
import { includes, filter } from "lodash-es";

export async function getStaticPaths({ paginate }: any) {
  const allPosts = await getCollection("blog");
  const tags = new Set(allPosts.flatMap((post) => post.data.categories));

  // Generate paths for each tag
  const paths = [];
  for (const tag of tags) {
    const filteredPosts = filter(allPosts, (post) => includes(post.data.categories, tag));
    const sorted = sortByDate(filteredPosts);

    // Add paths for this tag
    paths.push(
      ...paginate(sorted, {
        params: { tag },
        pageSize: 3,
      })
    );
  }

  return paths;
}

const { page } = Astro.props as { page: any };
const pagedArray = page.url.current.split("/");
const paged = `${pagedArray[1]}/${pagedArray[2]}`;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      main {
        width: 960px;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <Posts posts={page?.data} />
      <Pagination
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        currentPage={page.currentPage}
        totalPages={page.lastPage}
        paged={paged}
      />
    </main>
    <Footer />
  </body>
</html>
