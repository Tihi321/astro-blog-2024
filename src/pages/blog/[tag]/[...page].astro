---
import { getCollection } from "astro:content";
import Posts from "../../../layouts/Posts.astro";
import Layout from "../../../layouts/Layout.astro";
import { sortByDate } from "../../../utils/posts";
import Pagination from "../../../layouts/Pagination.astro";
import { includes, filter } from "lodash-es";
import Hero from "../../../layouts/Hero.astro";

export async function getStaticPaths({ paginate }: any) {
  const allPosts = await getCollection("blog");
  const tags = new Set(allPosts.flatMap((post) => post.data.categories));

  // Generate paths for each tag
  const paths = [];
  for (const tag of tags) {
    const filteredPosts = filter(allPosts, (post) => includes(post.data.categories, tag));
    const sorted = sortByDate(filteredPosts);

    // Add paths for this tag
    paths.push(
      ...paginate(sorted, {
        params: { tag },
        pageSize: 3,
      })
    );
  }

  return paths;
}

const { page } = Astro.props as { page: any };
const pagedArray = page.url.current.split("/");
const paged = `${pagedArray[1]}/${pagedArray[2]}`;
---

<Layout>
  <Hero src="/images/pages/writing-pen.png" title="Writing" />
  <Posts posts={page?.data} />
  <Pagination
    prevUrl={page.url.prev}
    nextUrl={page.url.next}
    currentPage={page.currentPage}
    totalPages={page.lastPage}
    paged={paged}
  />
</Layout>
